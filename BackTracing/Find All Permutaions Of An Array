
# Question 
Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.

Example 1:

Input: nums = [1,2,3]
Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]

# Code
```
class Solution {
    public static void findPermutaions(List<List<Integer>> ans,List<Integer>perm,int []num){
        if(perm.size()==num.length)
        {
            ans.add(new ArrayList<>(perm));
            return;
        }
        for(int i=0;i<num.length;i++){
            if(perm.contains(num[i]))
            continue;
            perm.add(num[i]);
            findPermutaions(ans,perm,num);
            perm.remove(perm.size()-1);
        }
    }
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans=new ArrayList<>();
        findPermutaions(ans,new ArrayList<>(),nums);
        return ans;
        
            }
}
```
